iomap   equ $bf00       ;I/O page (A15:8)
; diag
emu_dig equ iomap+$fc   ;diagnostic emulator flags, read/write
; RS232
ser_dat equ iomap+$f0   ;RS232 RX/TX data register, read/write
ser_msk equ iomap+$fe   ;RS232 interrupt enable mask register, read/write
ser_flg equ iomap+$ff   ;RS232 buffer flag register, read/write
; timer
tim_cdn equ iomap+$f1   ;10ms tick timer countdown register, read/write
t1_adr  equ iomap+$f4   ;timer 1 register address, read/write
t1_dat  equ iomap+$f5   ;timer 1 register data, read/write
tim_msk equ iomap+$fe   ;timer interrupt enable mask register, read/write
tim_flg equ iomap+$ff   ;timer flag register, read/write
; IRQ vector
irq_vec equ iomap+$fd   ;irq vector register, read only
; character LCD
lcd_cmd equ iomap+$d0   ;lcd command register, read/write
lcd_dat equ iomap+$d1   ;lcd data register, read/write
lcd_rcd equ iomap+$d2   ;lcd raw command register (no busy wait), read/write
lcd_rdt equ iomap+$d3   ;lcd raw data register (no busy wait), read/write
; I2C
i2c_cmd equ iomap+$fd   ;i2c command register, write only
i2c_sta equ iomap+$fd   ;i2c status register, read only
i2c_dat equ iomap+$fc   ;i2c data register, read/write
; SPI
spi_cmd equ iomap+$f6   ;spi command register, write only
spi_lrd equ iomap+$f6   ;spi last read data register, read only
spi_dat equ iomap+$90   ;spi data register set, read/write
; SPI device list
spi_sd  equ spi_dat     ;SD card slot
spi_165 equ spi_dat+1   ;74HC165 parallel input shift register
spi_595 equ spi_dat+2   ;74HC595 parallel output shift register
spi_eep equ spi_dat+3   ;25LC512 EEPROM
; DMA
dma_cmd equ iomap+$f7   ;dma command register, write only
dma_sta equ iomap+$f7   ;dma status register, read only
dma_dat equ iomap+$f8   ;dma data register, read/write

eep_beg equ $50         ;hold slave select
eep_end equ $10         ;end slave select

        bss
        org 0
cur_adr     ds  2       ;current address in EEPROM
seed        ds  1       ;test pattern seed & modifier
modifier    ds  1
toggle      ds  1
        org $200
read        ds  128     ;readback pattern
pattern     ds  128     ;generated pattern

              
        code

stop_debug   macro
        db  $db         ;uses 65c02 stop instruction, exception trap on 6502
        endm

        org $1000

start
        lda #eep_end    ;reset SPI
        sta spi_cmd
        jsr reset_seed
write128
        jsr gen_pattern
        jsr eep_busy
        lda #6          ;set write enable
        sta spi_eep
        lda #eep_beg    ;start write
        sta spi_cmd
        lda #2
        sta spi_eep
        lda cur_adr+1   ;send address high
        sta spi_eep
        lda cur_adr     ;send address low
        sta spi_eep
        ldx #127
write1
        lda pattern,x   ;write pattern
        sta spi_eep
        dex
        bpl write1
        lda #eep_end    ;end eep select
        sta spi_cmd
        lda cur_adr     ;address = next 128
        clc
        adc #128        
        sta cur_adr
        bcc write128
        inc cur_adr+1
        bne write128
        jsr eep_busy

readall
        jsr reset_seed
read128
        jsr gen_pattern
        lda #eep_beg    ;hold eep select for read
        sta spi_cmd
        lda #3          ;read command
        sta spi_eep
        lda cur_adr+1   ;write address high
        sta spi_eep
        lda cur_adr     ;write address low
        sta spi_eep
        ldx #127
read1
        lda spi_eep
        sta read,x
        dex
        bpl read1
        lda #eep_end    ;end eep select
        sta spi_cmd
        ldx #127
verify1 
        lda pattern,x
        cmp read,x
        bne *           ;trap for miscompare
        dex
        bpl verify1
        lda cur_adr     ;address = next 128
        clc
        adc #128
        sta cur_adr
        bcc read128
        inc cur_adr+1
        bne read128
        jmp readall     ;loop indefinitely

eep_busy        
        lda #eep_beg    ;wait for end of previous write
        sta spi_cmd
        lda #5          ;read status
        sta spi_eep
        lda spi_eep
        ldx #eep_end    ;end eep select
        stx spi_cmd
        and #1          ;test busy
        bne eep_busy
        rts
        
reset_seed
        lda #0
        ldx #4
rs_seed sta cur_adr,x   ;reset seed & current address
        dex
        bpl rs_seed
;        lda #77
;        sta seed
;        lda #33
;        sta modifier
        rts

gen_pattern                 ;generate test pattern
        lda toggle          ;seed or modifier
        bmi gen_add_seed
        dec toggle
        clc
        lda seed
        adc #5
        sta seed
        jmp gen_add_end
gen_add_seed
        inc toggle
        clc
        lda modifier
        adc #3
        sta modifier
gen_add_end
        ldx #2
        lda seed
gen_test_pre                 
        clc
        adc modifier
        dex
        bpl gen_test_pre
        ldx #127
gen_test_pat
        sta pattern,x
        clc
        adc modifier
        dex
        bpl gen_test_pat
        rts


        stop_debug
        end start
        